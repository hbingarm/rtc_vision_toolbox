services:
  motoros:
    build:
      context: ./motoman_ros1
      dockerfile: Dockerfile
    depends_on:
      roscore:
        condition: service_healthy
    image: motoros:latest
    container_name: motoros-container
    stdin_open: true
    tty: true
    network_mode: "host"
    environment:
      - ROS_MASTER_URI=http://192.168.1.1:11311
      - DISPLAY
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/dev/*:/dev/*"
    command: >
      bash -c "source ~/ros1_ws/devel/setup.bash && roslaunch yk_launch moveit.launch namespace:=yk_arm_rtc sim:=false"

  rs_arm_rtc:
    build:
      context: ./realsense-ros1-docker
      dockerfile: Dockerfile
    depends_on:
      roscore:
        condition: service_healthy
    image: realsense
    container_name: rs_arm_rtc
    network_mode: host
    privileged: true
    volumes:
      - ./realsense-ros1-docker/realsense-ros/realsense2_description:/catkin_ws/src/realsense2_description:ro
      - ./realsense-ros1-docker/realsense-ros/realsense2_camera:/catkin_ws/src/realsense2_camera:ro
      - /dev:/dev
    environment:
      - DISPLAY
      # - ROS_MASTER_URI=http://192.168.1.1:11311
      # - ROS_IP=192.168.1.1
    command: bash -c "source /catkin_ws/devel/setup.bash && roslaunch realsense2_camera rs_aligned_depth.launch"
    tty: true

  fts:
    build:
        context: ./ati-fts
        dockerfile: Dockerfile
    depends_on:
      roscore:
        condition: service_healthy
    image: fts:latest
    container_name: fts-container
    stdin_open: true
    tty: true
    network_mode: "host"
    environment:
      - ROS_MASTER_URI=http://192.168.1.1:11311
      - ROS_IP=192.168.1.1
      - DISPLAY
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/dev/*:/dev/*"
    command: >
      bash -c "python3 ros_fts.py"

  roscore:
    image: ros:noetic-ros-core
    container_name: roscore
    healthcheck:
      test: ["CMD-SHELL", "rosversion -d"]
      interval: 3s
      timeout: 5s
      retries: 5
    stdin_open: true
    tty: true
    network_mode: "host"
    environment:
      - "ROS_MASTER_URI=http://192.168.1.1:11311"
      - "ROS_IP=192.168.1.1"
      - "DISPLAY"
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/dev/*:/dev/*"
    command: >
      bash -c "source /opt/ros/noetic/setup.bash && exec roscore"

  rosbridge_dev:
    build:
      context: ./rosbridge_suite
      dockerfile: Dockerfile
    depends_on:
      roscore:
        condition: service_healthy     
    image: rosbridge_dev
    network_mode: host
    volumes:
      - ./rosbridge_suite/rosbridge_suite:/catkin_ws/src/rosbridge_suite:ro
      - ./rosbridge_suite/rosbridge_library:/catkin_ws/src/rosbridge_library:ro
      - ./rosbridge_suite/rosbridge_server:/catkin_ws/src/rosbridge_server:ro
      - ./rosbridge_suite/rosbridge_msgs:/catkin_ws/src/rosbridge_msgs:ro
      - ./rosbridge_suite/rosapi:/catkin_ws/src/rosapi:ro
      - ./rosbridge_suite/tf2_web_republisher:/catkin_ws/src/tf2_web_republisher:ro      
      - /home/rtc-demo/rtc_repos/device-interfaces/motoman_ros1/depend-packages/industrial_core/industrial_msgs:/catkin_ws/src/industrial_msgs:ro
    environment:
      - ROS_MASTER_URI=http://192.168.1.1:11311
      - ROS_IP=192.168.1.1
      - CATKIN_DIR=/catkin_ws
    tty: true
    stdin_open: true
    # entrypoint: /catkin_ws/run_websocket.sh
    # command: >
    #   bash -c "bash /catkin_ws/run_websocket.sh"
